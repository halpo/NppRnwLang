#include "deparse_wm_msg.h"
#include "lexers.h" // for RnwLang enum definitions
#include <map>
#include <sstream>
#include <windows.h>
#define _STRINGIFY_(x) m[x]=#x;
using namespace std;
using namespace RnwLang::Lexers;

namespace{  // local functions to this file
typedef map<int,string> ismap;
static ismap WindowsMap()
{
  ismap m;
  _STRINGIFY_(WM_NULL)
  _STRINGIFY_(WM_CREATE)
  _STRINGIFY_(WM_DESTROY)
  _STRINGIFY_(WM_MOVE)
  _STRINGIFY_(WM_SIZE)
  _STRINGIFY_(WM_ACTIVATE)
  _STRINGIFY_(WM_SETFOCUS)
  _STRINGIFY_(WM_KILLFOCUS)
  _STRINGIFY_(WM_ENABLE)
  _STRINGIFY_(WM_SETREDRAW)
  _STRINGIFY_(WM_SETTEXT)
  _STRINGIFY_(WM_GETTEXT)
  _STRINGIFY_(WM_GETTEXTLENGTH)
  _STRINGIFY_(WM_PAINT)
  _STRINGIFY_(WM_CLOSE)
  _STRINGIFY_(WM_QUERYENDSESSION)
  _STRINGIFY_(WM_QUIT)
  _STRINGIFY_(WM_QUERYOPEN)
  _STRINGIFY_(WM_ERASEBKGND)
  _STRINGIFY_(WM_SYSCOLORCHANGE)
  _STRINGIFY_(WM_ENDSESSION)
  _STRINGIFY_(WM_SHOWWINDOW)
  _STRINGIFY_(WM_WININICHANGE)
  _STRINGIFY_(WM_DEVMODECHANGE)
  _STRINGIFY_(WM_ACTIVATEAPP)
  _STRINGIFY_(WM_FONTCHANGE)
  _STRINGIFY_(WM_TIMECHANGE)
  _STRINGIFY_(WM_CANCELMODE)
  _STRINGIFY_(WM_SETCURSOR)
  _STRINGIFY_(WM_MOUSEACTIVATE)
  _STRINGIFY_(WM_CHILDACTIVATE)
  _STRINGIFY_(WM_QUEUESYNC)
  _STRINGIFY_(WM_GETMINMAXINFO)
  _STRINGIFY_(WM_PAINTICON)
  _STRINGIFY_(WM_ICONERASEBKGND)
  _STRINGIFY_(WM_NEXTDLGCTL)
  _STRINGIFY_(WM_SPOOLERSTATUS)
  _STRINGIFY_(WM_DRAWITEM)
  _STRINGIFY_(WM_MEASUREITEM)
  _STRINGIFY_(WM_DELETEITEM)
  _STRINGIFY_(WM_VKEYTOITEM)
  _STRINGIFY_(WM_CHARTOITEM)
  _STRINGIFY_(WM_SETFONT)
  _STRINGIFY_(WM_GETFONT)
  _STRINGIFY_(WM_SETHOTKEY)
  _STRINGIFY_(WM_GETHOTKEY)
  _STRINGIFY_(WM_QUERYDRAGICON)
  _STRINGIFY_(WM_COMPAREITEM)
  _STRINGIFY_(WM_GETOBJECT)
  _STRINGIFY_(WM_COMPACTING)
  _STRINGIFY_(WM_COMMNOTIFY)
  _STRINGIFY_(WM_WINDOWPOSCHANGING)
  _STRINGIFY_(WM_WINDOWPOSCHANGED)
  _STRINGIFY_(WM_POWER)
  _STRINGIFY_(WM_COPYDATA)
  _STRINGIFY_(WM_CANCELJOURNAL)
  _STRINGIFY_(WM_NOTIFY)
  _STRINGIFY_(WM_INPUTLANGCHANGEREQUEST)
  _STRINGIFY_(WM_INPUTLANGCHANGE)
  _STRINGIFY_(WM_TCARD)
  _STRINGIFY_(WM_HELP)
  _STRINGIFY_(WM_USERCHANGED)
  _STRINGIFY_(WM_NOTIFYFORMAT)
  _STRINGIFY_(WM_CONTEXTMENU)
  _STRINGIFY_(WM_STYLECHANGING)
  _STRINGIFY_(WM_STYLECHANGED)
  _STRINGIFY_(WM_DISPLAYCHANGE)
  _STRINGIFY_(WM_GETICON)
  _STRINGIFY_(WM_SETICON)
  _STRINGIFY_(WM_NCCREATE)
  _STRINGIFY_(WM_NCDESTROY)
  _STRINGIFY_(WM_NCCALCSIZE)
  _STRINGIFY_(WM_NCHITTEST)
  _STRINGIFY_(WM_NCPAINT)
  _STRINGIFY_(WM_NCACTIVATE)
  _STRINGIFY_(WM_GETDLGCODE)
  _STRINGIFY_(WM_SYNCPAINT)
  _STRINGIFY_(WM_NCMOUSEMOVE)
  _STRINGIFY_(WM_NCLBUTTONDOWN)
  _STRINGIFY_(WM_NCLBUTTONUP)
  _STRINGIFY_(WM_NCLBUTTONDBLCLK)
  _STRINGIFY_(WM_NCRBUTTONDOWN)
  _STRINGIFY_(WM_NCRBUTTONUP)
  _STRINGIFY_(WM_NCRBUTTONDBLCLK)
  _STRINGIFY_(WM_NCMBUTTONDOWN)
  _STRINGIFY_(WM_NCMBUTTONUP)
  _STRINGIFY_(WM_NCMBUTTONDBLCLK)
  _STRINGIFY_(WM_NCXBUTTONDOWN)
  _STRINGIFY_(WM_NCXBUTTONUP)
  _STRINGIFY_(WM_NCXBUTTONDBLCLK)
  _STRINGIFY_(WM_INPUT)
  _STRINGIFY_(WM_KEYDOWN)
  _STRINGIFY_(WM_KEYFIRST)
  _STRINGIFY_(WM_KEYUP)
  _STRINGIFY_(WM_CHAR)
  _STRINGIFY_(WM_DEADCHAR)
  _STRINGIFY_(WM_SYSKEYDOWN)
  _STRINGIFY_(WM_SYSKEYUP)
  _STRINGIFY_(WM_SYSCHAR)
  _STRINGIFY_(WM_SYSDEADCHAR)
  _STRINGIFY_(WM_KEYLAST)
  _STRINGIFY_(WM_IME_STARTCOMPOSITION)
  _STRINGIFY_(WM_IME_ENDCOMPOSITION)
  _STRINGIFY_(WM_IME_COMPOSITION)
  _STRINGIFY_(WM_IME_KEYLAST)
  _STRINGIFY_(WM_INITDIALOG)
  _STRINGIFY_(WM_COMMAND)
  _STRINGIFY_(WM_SYSCOMMAND)
  _STRINGIFY_(WM_TIMER)
  _STRINGIFY_(WM_HSCROLL)
  _STRINGIFY_(WM_VSCROLL)
  _STRINGIFY_(WM_INITMENU)
  _STRINGIFY_(WM_INITMENUPOPUP)
  _STRINGIFY_(WM_MENUSELECT)
  _STRINGIFY_(WM_MENUCHAR)
  _STRINGIFY_(WM_ENTERIDLE)
  _STRINGIFY_(WM_MENURBUTTONUP)
  _STRINGIFY_(WM_MENUDRAG)
  _STRINGIFY_(WM_MENUGETOBJECT)
  _STRINGIFY_(WM_UNINITMENUPOPUP)
  _STRINGIFY_(WM_MENUCOMMAND)
  _STRINGIFY_(WM_CHANGEUISTATE)
  _STRINGIFY_(WM_UPDATEUISTATE)
  _STRINGIFY_(WM_QUERYUISTATE)
  _STRINGIFY_(WM_CTLCOLORMSGBOX)
  _STRINGIFY_(WM_CTLCOLOREDIT)
  _STRINGIFY_(WM_CTLCOLORLISTBOX)
  _STRINGIFY_(WM_CTLCOLORBTN)
  _STRINGIFY_(WM_CTLCOLORDLG)
  _STRINGIFY_(WM_CTLCOLORSCROLLBAR)
  _STRINGIFY_(WM_CTLCOLORSTATIC)
  _STRINGIFY_(WM_MOUSEFIRST)
  _STRINGIFY_(WM_MOUSEMOVE)
  _STRINGIFY_(WM_LBUTTONDOWN)
  _STRINGIFY_(WM_LBUTTONUP)
  _STRINGIFY_(WM_LBUTTONDBLCLK)
  _STRINGIFY_(WM_RBUTTONDOWN)
  _STRINGIFY_(WM_RBUTTONUP)
  _STRINGIFY_(WM_RBUTTONDBLCLK)
  _STRINGIFY_(WM_MBUTTONDOWN)
  _STRINGIFY_(WM_MBUTTONUP)
  _STRINGIFY_(WM_MBUTTONDBLCLK)
  _STRINGIFY_(WM_MOUSELAST)
  _STRINGIFY_(WM_MOUSEWHEEL)
  _STRINGIFY_(WM_XBUTTONDOWN)
  _STRINGIFY_(WM_XBUTTONUP)
  _STRINGIFY_(WM_XBUTTONDBLCLK)
  _STRINGIFY_(WM_PARENTNOTIFY)
  _STRINGIFY_(WM_ENTERMENULOOP)
  _STRINGIFY_(WM_EXITMENULOOP)
  _STRINGIFY_(WM_NEXTMENU)
  _STRINGIFY_(WM_SIZING)
  _STRINGIFY_(WM_CAPTURECHANGED)
  _STRINGIFY_(WM_MOVING)
  _STRINGIFY_(WM_POWERBROADCAST)
  _STRINGIFY_(WM_DEVICECHANGE)
  _STRINGIFY_(WM_MDICREATE)
  _STRINGIFY_(WM_MDIDESTROY)
  _STRINGIFY_(WM_MDIACTIVATE)
  _STRINGIFY_(WM_MDIRESTORE)
  _STRINGIFY_(WM_MDINEXT)
  _STRINGIFY_(WM_MDIMAXIMIZE)
  _STRINGIFY_(WM_MDITILE)
  _STRINGIFY_(WM_MDICASCADE)
  _STRINGIFY_(WM_MDIICONARRANGE)
  _STRINGIFY_(WM_MDIGETACTIVE)
  _STRINGIFY_(WM_MDISETMENU)
  _STRINGIFY_(WM_ENTERSIZEMOVE)
  _STRINGIFY_(WM_EXITSIZEMOVE)
  _STRINGIFY_(WM_DROPFILES)
  _STRINGIFY_(WM_MDIREFRESHMENU)
  _STRINGIFY_(WM_IME_SETCONTEXT)
  _STRINGIFY_(WM_IME_NOTIFY)
  _STRINGIFY_(WM_IME_CONTROL)
  _STRINGIFY_(WM_IME_COMPOSITIONFULL)
  _STRINGIFY_(WM_IME_SELECT)
  _STRINGIFY_(WM_IME_CHAR)
  _STRINGIFY_(WM_IME_REQUEST)
  _STRINGIFY_(WM_IME_KEYDOWN)
  _STRINGIFY_(WM_IME_KEYUP)
  _STRINGIFY_(WM_NCMOUSEHOVER)
  _STRINGIFY_(WM_MOUSEHOVER)
  _STRINGIFY_(WM_NCMOUSELEAVE)
  _STRINGIFY_(WM_MOUSELEAVE)
  _STRINGIFY_(WM_CUT)
  _STRINGIFY_(WM_COPY)
  _STRINGIFY_(WM_PASTE)
  _STRINGIFY_(WM_CLEAR)
  _STRINGIFY_(WM_UNDO)
  _STRINGIFY_(WM_RENDERFORMAT)
  _STRINGIFY_(WM_RENDERALLFORMATS)
  _STRINGIFY_(WM_DESTROYCLIPBOARD)
  _STRINGIFY_(WM_DRAWCLIPBOARD)
  _STRINGIFY_(WM_PAINTCLIPBOARD)
  _STRINGIFY_(WM_VSCROLLCLIPBOARD)
  _STRINGIFY_(WM_SIZECLIPBOARD)
  _STRINGIFY_(WM_ASKCBFORMATNAME)
  _STRINGIFY_(WM_CHANGECBCHAIN)
  _STRINGIFY_(WM_HSCROLLCLIPBOARD)
  _STRINGIFY_(WM_QUERYNEWPALETTE)
  _STRINGIFY_(WM_PALETTEISCHANGING)
  _STRINGIFY_(WM_PALETTECHANGED)
  _STRINGIFY_(WM_HOTKEY)
  _STRINGIFY_(WM_PRINT)
  _STRINGIFY_(WM_PRINTCLIENT)
  _STRINGIFY_(WM_APPCOMMAND)
  _STRINGIFY_(WM_HANDHELDFIRST)
  _STRINGIFY_(WM_HANDHELDLAST)
  _STRINGIFY_(WM_AFXFIRST)
  _STRINGIFY_(WM_AFXLAST)
  _STRINGIFY_(WM_PENWINFIRST)
  _STRINGIFY_(WM_PENWINLAST)
  return m;
}
class MsgMap : public ismap
{
  private:
    string identifier;
  public:
    MsgMap(){}
    MsgMap(string s):identifier(s){}
    string operator[](int index){
      MsgMap::iterator loc = find(index);
      if(loc == end()){
        ostringstream notfound;
        notfound << "<" << identifier << "(" << index <<") unknown>";
        return notfound.str();
      } else {
        return (*loc).second;
      }
    }
    MsgMap(ismap const &rhs):ismap(rhs){}
};
static ismap StyleMap(){
  using namespace RnwLang;
  ismap m;
  _STRINGIFY_(TEX_DEFAULT)
  _STRINGIFY_(TEX_SPECIAL)
  _STRINGIFY_(TEX_GROUP)
  _STRINGIFY_(TEX_SYMBOL)
  _STRINGIFY_(TEX_COMMAND)
  _STRINGIFY_(TEX_TEXT)
  _STRINGIFY_(TEX_RNW_SPECIAL)
  _STRINGIFY_(RNW_DEFAULT)
  _STRINGIFY_(RNW_REUSE)
  _STRINGIFY_(RNW_OPERATOR)
  _STRINGIFY_(RNW_COMMENT)
  _STRINGIFY_(RNW_NAME)
  _STRINGIFY_(RNW_KEYWORD)
  _STRINGIFY_(WORD0)
  _STRINGIFY_(WORD1)
  _STRINGIFY_(WORD2)
  _STRINGIFY_(WORD3)
  _STRINGIFY_(WORD4)
  _STRINGIFY_(WORD5)
  _STRINGIFY_(WORD6)
  _STRINGIFY_(WORD7)
  _STRINGIFY_(WORD8)
  _STRINGIFY_(R_DEFAULT)
  _STRINGIFY_(R_COMMENT)
  _STRINGIFY_(R_KWORD)
  _STRINGIFY_(R_BASEKWORD)
  _STRINGIFY_(R_OTHERKWORD)
  _STRINGIFY_(R_NUMBER)
  _STRINGIFY_(R_STRING)
  _STRINGIFY_(R_STRING2)
  _STRINGIFY_(R_OPERATOR)
  _STRINGIFY_(R_IDENTIFIER)
  _STRINGIFY_(R_INFIX)
  _STRINGIFY_(R_INFIXEOL)
  return m;
}
}
#ifndef NO_DEPARSE_MSG
string RnwLang::deparseMsg(int i){
  static MsgMap wmmap = WindowsMap();
  return wmmap[i];
}
string RnwLang::deparseStyle(int i){
  static MsgMap stylemap = StyleMap();
  return stylemap[i];
}
string RnwLang::ctos(char c){
  stringstream s;
  char a[2]={c,0};
  s << reinterpret_cast<char*>(a);
  return s.str();
}
#else
string deparseMsg(int i){return string();}
#endif // NO_DEPARSE_MSG
#ifdef TEST_MAIN
#include <iostream>
INT WINAPI WinMain( HINSTANCE hInst, HINSTANCE, LPSTR, INT )
{
	cout << "message 3 is " << deparseMsg(3) << endl;
	return 0;
}
#endif
